name: Android Robot Framework CI /CD Tests

on:
  workflow_dispatch:

env:
  CI_ENV_ANDROID: "ci_android"
  PLATFORM_VERSION: "12.0"
  DEVICE_NAME: "emulator-5554"

jobs:
  run-robot-framework-appium-android-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

#      # Ensure apk-folder exists before downloading
#      - name: Ensure apk-folder Exists
#        run: mkdir -p apk

      # Step to Download and Unzip File into apk-folder
      - name: Download and Apk File
        run: |
          cd apk
          curl -LO "https://github.com/fmidev/weather-app/releases/download/latest/app-latest.apk"

      # Verify Downloaded File
      - name: Verify Downloaded Apk File
        run: ls -la apk/

      # Set Up Java (Required for Android SDK)
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Enable KVM Group Permissions
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: google_apis
          arch: x86_64
          profile: pixel_3
          emulator-options: '-no-window -no-boot-anim'
          disable-animations: true

      # Wait for Emulator to Boot
      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device
          echo "Waiting for emulator to fully boot..."
          for i in {1..10}; do
            if adb shell getprop sys.boot_completed | grep -m 1 '1'; then
              echo "Emulator is ready!"
              exit 0
            fi
            echo "Emulator is still booting, waiting..."
            sleep 10
          done
          echo "Emulator failed to boot within the timeout!"
          exit 1

      # Install Node.js for Appium
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install Appium and Drivers
      - name: Install Appium and Drivers
        run: |
          npm install -g appium
          appium driver install uiautomator2

      # Start Appium Server
      - name: Start Appium Server
        run: |
          appium --base-path /wd/hub --address 127.0.0.1 --port 4723 --log-level info > appium.log 2>&1 &
          sleep 20

      # Install Python and Robot Framework Dependencies
      - name: Install Python Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-appiumlibrary
          pip install robotframework-seleniumLibrary
          pip install Appium-Python-Client
          pip install pytz

      # Run Robot Framework Tests
      - name: Run Robot Framework Tests
        run: |
          robot -d results tests/map_view_tests.robot
        continue-on-error: true

      # Remove apks from apk-folder After Tests
      - name: Clean Up Apk Files
        run: |
          rm -f apk/*.apk
          echo "Cleaned up apk files, but kept apk-folder"

      # Upload Robot Framework test results as artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: |
            ./results
            ./stdout
          retention-days: 2

      # Upload Appium Logs
      - name: Upload Appium Logs
        uses: actions/upload-artifact@v4
        with:
          name: appium-logs
          path: appium.log
          retention-days: 2